import * as E from "vue";
import { warn as Z, defineComponent as q, createVNode as c, Fragment as W, getCurrentInstance as ee, onMounted as te, nextTick as ne, toRefs as re, computed as P, unref as r, withDirectives as oe, mergeProps as B, resolveDirective as ae, isVNode as le } from "vue";
import { ElTable as ie, ElPagination as se, ElTableColumn as pe } from "element-plus";
process.env.NODE_ENV === "production" || Object.freeze({}), process.env.NODE_ENV === "production" || Object.freeze([]);
const ue = Object.prototype.hasOwnProperty, D = (e, t) => ue.call(e, t), _ = (e) => e !== null && typeof e == "object", de = ((e, t) => {
  if (!_(e) || _(o = e) && o.__epPropKey)
    return e;
  var o;
  const { values: l, required: u, default: v, type: O, validator: y } = e, w = l || y ? (m) => {
    let s = !1, g = [];
    if (l && (g = Array.from(l), D(e, "default") && g.push(v), s || (s = g.includes(m))), y && (s || (s = y(m))), !s && g.length > 0) {
      const N = [...new Set(g)].map((z) => JSON.stringify(z)).join(", ");
      Z(`Invalid prop: validation failed${t ? ` for prop "${t}"` : ""}. Expected one of [${N}], got value ${JSON.stringify(m)}.`);
    }
    return s;
  } : void 0, S = { type: O, required: !!u, validator: w, __epPropKey: !0 };
  return D(e, "default") && (S.default = v), S;
})({ type: String, values: ["", "default", "small", "large"], required: !1 });
var ce = { data: { type: Array, default: () => [] }, size: de, width: [String, Number], height: [String, Number], maxHeight: [String, Number], fit: { type: Boolean, default: !0 }, stripe: Boolean, border: Boolean, rowKey: [String, Function], showHeader: { type: Boolean, default: !0 }, showSummary: Boolean, sumText: String, summaryMethod: Function, rowClassName: [String, Function], rowStyle: [Object, Function], cellClassName: [String, Function], cellStyle: [Object, Function], headerRowClassName: [String, Function], headerRowStyle: [Object, Function], headerCellClassName: [String, Function], headerCellStyle: [Object, Function], highlightCurrentRow: Boolean, currentRowKey: [String, Number], emptyText: String, expandRowKeys: Array, defaultExpandAll: Boolean, defaultSort: Object, tooltipEffect: String, tooltipOptions: Object, spanMethod: Function, selectOnIndeterminate: { type: Boolean, default: !0 }, indent: { type: Number, default: 16 }, treeProps: { type: Object, default: () => ({ hasChildren: "hasChildren", children: "children" }) }, lazy: Boolean, load: Function, style: { type: Object, default: () => ({}) }, className: { type: String, default: "" }, tableLayout: { type: String, default: "fixed" }, scrollbarAlwaysOn: { type: Boolean, default: !1 }, flexible: Boolean };
const ge = { key: { type: String || Number, default: "0" }, columns: { type: Array, default: [] }, loading: { type: Boolean, default: !1 }, loadingConfig: { type: Object, default: () => {
} }, alignWhole: { type: String, default: "left" }, headerAlign: { type: String, default: "" }, showOverflowTooltip: { type: Boolean, default: !1 }, rowHoverBgColor: { type: String, default: "" }, pagination: { type: Object, default: { total: 0, pageSize: 5, align: "right", background: !1, pageSizes: [5, 10, 15, 20], layout: "total, sizes, prev, pager, next, jumper" } }, paginationSmall: { type: Boolean, default: !1 }, ...ce }, H = q({ name: "Renderer", props: { render: { type: Function }, params: { type: Object } }, setup: (e) => () => c(W, null, [e.render(e.params)]) });
var J = Object.defineProperty, fe = Object.getOwnPropertyDescriptor, ye = Object.getOwnPropertyNames, me = Object.prototype.hasOwnProperty, K = (e, t, o, l) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let u of ye(t))
      !me.call(e, u) && u !== o && J(e, u, { get: () => t[u], enumerable: !(l = fe(t, u)) || l.enumerable });
  return e;
}, be = Object.prototype.toString;
function M(e) {
  return typeof e == "function";
}
function he(e) {
  return function(t, o) {
    return be.call(t) === `[object ${o}]`;
  }(e, "Boolean");
}
var V, I, h = {};
((e, t) => {
  for (var o in t)
    J(e, o, { get: t[o], enumerable: !0 });
})(h, { Vue: () => E }), K(h, V = E, "default"), I && K(I, V, "default");
var Oe = () => {
  let e, t = (0, h.ref)(!1), o = () => {
    t.value = document.documentElement.classList.contains("dark");
  };
  return function(l) {
    (0, h.getCurrentInstance)() && (0, h.onUnmounted)(l);
  }(() => {
    e.takeRecords(), e.disconnect();
  }), (0, h.onBeforeMount)(() => {
    o(), e = new MutationObserver(o), e.observe(document.documentElement, { attributes: !0, attributeFilter: ["class"] });
  }), { isDark: t };
};
const T = q({ name: "PureTable", props: ge, emits: ["page-size-change", "page-current-change"], setup(e, { slots: t, attrs: o, emit: l, expose: u }) {
  const { isDark: v } = Oe(), O = ee();
  function y() {
    var n;
    return (n = O == null ? void 0 : O.proxy) == null ? void 0 : n.$refs[`TableRef${e.key}`];
  }
  function w() {
    return y().$refs;
  }
  te(() => {
    ne(() => {
      e.rowHoverBgColor && w().tableWrapper.style.setProperty("--el-table-row-hover-bg-color", e.rowHoverBgColor, "important");
    });
  });
  const { columns: S, loading: m, loadingConfig: s, alignWhole: g, headerAlign: N, showOverflowTooltip: z, pagination: a } = re(e);
  let L = P(() => {
    if (!r(s))
      return;
    let { text: n, spinner: i, svg: d, viewBox: p } = r(s);
    return { "element-loading-text": n, "element-loading-spinner": i, "element-loading-svg": d, "element-loading-svg-view-box": p };
  });
  const U = P(() => {
    var n, i;
    if (r(m))
      return { "element-loading-background": ((i = (n = r(s)) == null ? void 0 : n.background) != null ? i : v.value) ? "rgba(0, 0, 0, 0.45)" : "rgba(255, 255, 255, 0.45)" };
  }), G = P(() => {
    var n;
    return Object.assign({ width: "100%", margin: "16px 0", display: "flex", justifyContent: r(a).align === "left" ? "flex-start" : r(a).align === "center" ? "center" : "flex-end" }, (n = r(a).style) != null ? n : {});
  });
  let Q = r(a) && r(a).currentPage && r(a).pageSize;
  const k = (n, i) => {
    const { cellRenderer: d, slot: p, headerRenderer: R, hide: b, children: j, prop: x, ...Y } = n;
    if (M(b) && b(o))
      return b(o);
    if (he(b) && b)
      return b;
    const $ = { default: (f) => {
      var A;
      return d ? c(H, { render: d, params: Object.assign(f, { index: f.$index, props: e, attrs: o }) }, null) : p ? (A = t == null ? void 0 : t[p]) == null ? void 0 : A.call(t, Object.assign(f, { index: f.$index, props: e, attrs: o })) : void 0;
    } };
    let C = R ? { header: (f) => c(H, { render: R, params: Object.assign(f, { index: f.$index, props: e, attrs: o }) }, null), ...$ } : $;
    return (j == null ? void 0 : j.length) > 0 && (C = j.map(k)), c(pe, B({ key: i }, Y, { prop: M(x) && x(i) ? x(i) : x, align: n != null && n.align ? n.align : r(g), headerAlign: n != null && n.headerAlign ? n.headerAlign : r(N), showOverflowTooltip: n != null && n.showOverflowTooltip ? n.showOverflowTooltip : r(z) }), typeof (F = C) == "function" || Object.prototype.toString.call(F) === "[object Object]" && !le(F) ? C : { default: () => [C] });
    var F;
  };
  u({ getTableRef: y, getTableDoms: w });
  let X = () => {
    var n, i;
    return c(W, null, [c(ie, B(e, o, { ref: `TableRef${e.key}` }), { default: () => r(S).map(k), append: () => t.append && t.append(), empty: () => t.empty && t.empty() }), Q ? c(se, B(o, { class: "pure-pagination", style: r(G) }, r(a), { small: e != null && e.paginationSmall ? e == null ? void 0 : e.paginationSmall : !!r(a).small && r(a).small, layout: (n = r(a).layout) != null ? n : "total, sizes, prev, pager, next, jumper", pageSizes: (i = r(a).pageSizes) != null ? i : [5, 10, 15, 20], onSizeChange: (d) => ((p) => {
      r(a).pageSize = p, l("page-size-change", p);
    })(d), onCurrentChange: (d) => ((p) => {
      r(a).currentPage = p, l("page-current-change", p);
    })(d) }), null) : null]);
  };
  return () => oe(c("div", B({ class: "pure-table", style: "width:100%" }, r(U), r(L)), [X()]), [[ae("loading"), r(m)]]);
} }), Se = Object.assign(T, { install: function(e) {
  e.component(T.name, T);
} });
export {
  Se as PureTable,
  Se as default
};
